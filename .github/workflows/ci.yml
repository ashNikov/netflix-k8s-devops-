name: CI

on:
  push:
    branches: [ "dev" ]
  pull_request:

env:
  IMAGE_REPO: ashnikov0007/netflix-web
  BUILD_DIR: "web"   # our Dockerfile is in ./web

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Node setup (will be skipped since no package.json found)
      - name: Setup Node
        if: hashFiles(format('{0}/package.json', env.BUILD_DIR)) != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.BUILD_DIR }}/package-lock.json

      - name: Install deps & test
        if: hashFiles(format('{0}/package.json', env.BUILD_DIR)) != ''
        working-directory: ${{ env.BUILD_DIR }}
        run: |
          npm ci || npm install
          npm test --if-present

      # Build only if Dockerfile exists
      - name: Build Docker image
        if: hashFiles(format('{0}/Dockerfile', env.BUILD_DIR)) != ''
        run: |
          TAG_SHA=${GITHUB_SHA::7}
          docker build -t $IMAGE_REPO:dev-$TAG_SHA -t $IMAGE_REPO:dev-latest -f "$BUILD_DIR/Dockerfile" "$BUILD_DIR"
          echo "Built $IMAGE_REPO:dev-$TAG_SHA"

      - name: Docker login
        if: github.event_name == 'push' && hashFiles(format('{0}/Dockerfile', env.BUILD_DIR)) != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        if: github.event_name == 'push' && hashFiles(format('{0}/Dockerfile', env.BUILD_DIR)) != ''
        run: |
          TAG_SHA=${GITHUB_SHA::7}
          docker push $IMAGE_REPO:dev-$TAG_SHA
          docker push $IMAGE_REPO:dev-latest
